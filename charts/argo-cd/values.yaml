hostname: lsst-sandbox.ncsa.illinois.edu
argo-cd:
  server:
    extraArgs:
      # Since ArgoCD web GUI will secured behind `kubectl port-forward` 
      # or the reverse proxy of the ingress controller.
      - --insecure
      - --rootpath
      - /argo-cd
      - --basehref
      - /argo-cd
    config:
      # If the git repo in which this is defined is private, then you need to create a secret containing the repo
      # authentication credentials and URL so that when you allow ArgoCD to manage itself it can bootstrap properly.
      repositories: |
        - type: helm
          name: stable
          url: https://charts.helm.sh/stable
        - type: helm
          name: argo-cd
          url: https://argoproj.github.io/argo-helm
        - type: helm
          name: hashicorp
          url: https://helm.releases.hashicorp.com/
        - type: helm
          name: bitnami
          url: https://charts.bitnami.com/bitnami
        - type: helm
          name: longhorn
          url: https://charts.longhorn.io
        - type: git
          url: https://github.com/lsst-dm/lsst-sandbox.git
        - type: git
          url: https://gitlab.com/ncsa-blast/kubernetes.git
      # Following the guides at 
      #   https://argoproj.github.io/argo-cd/user-guide/diffing/#system-level-configuration
      # and 
      #   https://argoproj.github.io/argo-cd/faq/#why-is-my-application-stuck-in-progressing-state
      resource.customizations: |
        admissionregistration.k8s.io/MutatingWebhookConfiguration:
          ignoreDifferences: |
            jsonPointers:
            - /webhooks/0/clientConfig/caBundle
        bitnami.com/SealedSecret:
            health.lua: |
              hs = {}
              hs.status = "Healthy"
              return hs
        networking.k8s.io/Ingress:
            health.lua: |
              hs = {}
              hs.status = "Healthy"
              return hs
      url: https://lsst-sandbox.ncsa.illinois.edu/argo-cd
      dex.config: |
        connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: $dex.github.clientId
              clientSecret: $dex.github.clientSecret
              orgs:
              - name: lsst-dm
          - type: gitlab
            id: gitlab
            name: GitLab
            config:
              # Set these values in `argocd-secret` Secret
              clientID: $dex.gitlab.clientId
              clientSecret: $dex.gitlab.clientSecret
              groups:
              # https://gitlab.com/ncsa-blast
              - "ncsa-blast"

